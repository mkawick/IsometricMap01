using System.Collections;
using System.Collections.Generic;
using UnityEditor.Experimental.GraphView;
using UnityEngine;

public enum UnitAbilities
{
    Combat, 
    Defend,
    WoodHarvest,
    Farming,
    Construction
}

[System.Serializable]
public class UnitAbilitiesEntry // for costs and entries in classes
{
    public UnitAbilities ability;
    public float strength;
}


[CreateAssetMenu(fileName = "Data", menuName = "ScriptableObjects/IsoUnitData", order = 2)]
public class IsoUnitData : ScriptableObject
{
    public string unitName;
    [Tooltip("do not assign; assigned at runtime")]
    public GameObject isoUnit;
    //public int price;
    [TextArea]
    public string description;
    [Tooltip("do not assign; autogenerated")]
    public Sprite image;
    public int numActionsPerTurn;
    public ResourceTypeEntry[] costs;
    public UnitAbilitiesEntry[] abilities;

    public void Init(GameObject owner)
    {
        isoUnit = owner;
        // todo setup a sprite
    }

    public int GetCost(ResourceType type)
    {
        if (costs == null)
            return 0;
        foreach (ResourceTypeEntry entry in costs)
        {
            if (entry.type == type)
            {
                return entry.cost;
            }
        }
        return 0;
    }

    public float GetAbility(UnitAbilities type)
    {
        if (abilities == null)
            return 0;
        foreach (var entry in abilities)
        {
            if (entry.ability == type)
            {
                return entry.strength;
            }
        }
        return 0;
    }
}